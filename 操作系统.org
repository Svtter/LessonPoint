#+TITLE: 操作系统
知识提纲
* 1．操作系统概述
** 操作系统的地位，作用，发展历史，特征，功能
** 操作系统的分类及各类操作系统的特点
** 常用的操作系统
** 习题
    - 计算机操作系统方便用户，管理和控制计算机软硬件资源的系统软件。
* TODO 2．进程管理
** 进程的概念，特性
    进程是对正在运行的程序的一种抽象，是资源分配和独立运行的基本单位。
** 进程的状态及其转换（具有挂起状态）
    *运行状态* - *阻塞状态*（静止阻塞，活动阻塞） - *就绪状态*（活动就绪，静止就绪）
- 特别的，无法从阻塞状态直接转换成运行状态
** PCB的作用，内容，组织方式
**** 作用
    - 为了保存进程的各个状态，建立专用数据结构，即为PCB
**** 内容
    - 进程标识，位置信息，状态信息，进程的优先级，进程现场保护区，资源清单，队列指针等
**** 组织方式
     - 线性表
     - 链接表
     - 索引表
** 各种进程控制的原语（创建，终止，阻塞，唤醒，挂起）
    原语指由若干条指令组成，不可被打断。
**** 创建
      申请空间 - 查找PCB表 - 分配PCB空间 - 分配资源 - 信息填入PCB - PCB插入就绪队列
**** 终止
      找到PCB - 没有，进入异常处理 - 有，撤销PCB链中该进程的名字以及所有的子进程
**** 阻塞
      中断CPU - 将CPU状态存入PCB - 进程状态转变为阻塞 - 插入等待队列 - 执行调度程序
**** 唤醒
      唤醒条件满足 - PCB状态设置就绪，脱离阻塞队列 - 插入就绪队列
** 线程的概念，进程与线程的联系与区别
**** 概念
    线程是进程中的一个实体，是被系统独立调度和分配的基本单位
**** 联系区别
***** 调度
      传统操作系统中，拥有资源的基本单位和独立调度的基本单位都是进程，而在引入线程的操作系统中，则把线程
作为调度和分配的基本单位，而把进程作为拥有资源的基本单位，使传统进程的两个属性分开
***** 并发性
      不仅进程之间可以并发执行，一个进程的多个线程也可以并发执行
***** 拥有资源
      线程不拥有系统资源，但可以访问隶属进程的其他资源
***** 系统开销

** 进程同步的概念
    异步环境下并发执行的进程：
**** 同步
      因直接制约而需要相互等待，相互合作，以达到各进程按相互协调的速度执行的过程，成为进程的同步
**** 互斥
      因间接制约而导致交替执行的过程称为进程的互斥
** 临界资源，临界区的概念
    某段时间内只能允许一个进程使用的资源称为临界资源，必须互斥执行的程序段称为某临界资源的临界区
    - 进入区
      - 临界区
    - 退出区
** TODO 同步机制原则
    - 让权等待（不占用CPU资源），忙等待则占用CPU资源
    - 有限w
    - 空闲E
** 同步与互斥的各种方法（软件，硬件，信号量（集））
**** 硬件方式
        - 中断禁用
        - 专用机器指令
**** 软件方式
        - Dekker算法，Peterson算法 无法实现让权等待
**** 信号量, P/V操作

** 经典同步问题
**** 生产者消费者问题
***** 生产者
1. 有无空位
2. 锁资源
3. 释放资源
4. 增加可使用资源
***** 消费者
1. 有无可使用资源
2. 锁资源
3. 释放资源
4. 增加空位
**** 读者写者问题
***** 读者
1. 锁资源
2. 判断读者数量，以此判断是否锁写信号
3. 释放锁
***** 写者
1. 要求写信号
2. 写资源
3. 释放写信号
**** 哲学家就餐问题
- 左右两边同时可以拿叉子的时候，才拿
- 奇数号（1,3）的哲学家先拿左边的叉子，偶数号（0,2,4）的科学家先拿右边的叉子。
** TODO 调度方式（抢占，非抢占式），类型（高，中，低）
    - 抢占方式即新来的优先级高，则立即执行，对于原本的进程，保存其状态
    - 类型？
** 各种调度算法（FCFS，SJF，RR，优先权法，多级反馈轮转）
**** FCFS 先来先服务
**** RR 时间片轮转
     - 分配时间片段给任何一个进程
**** 短进程优先
     - 时间短的进程优先执行
**** 高响应比优先
- 公式： 优先权 = （等待时间 + 要求服务时间） / 要求服务时间
- 需要计算响应比，会增加系统开销
  
**** 优先级法
     进程的类型，运行时间，作业的优先级。
**** 多级反馈队列调度算法
1. 放在不同等级的队列上进行执行
2. 在每一个队列上执行时间片轮转
** 死锁的概念，产生原因，必要条件，处理方法
**** 概念
     某个进程提出资源申请的时候，有关进程无法在外力的协助下，永远分配不到必需的资源而无法继续运行。
**** 产生原因
     1. 系统提供的资源不能满足每个进程的使用需求
     2. 在多道程序运行时，进程推进顺序不合法。
**** 必要条件
      1. 互斥条件
      2. 不剥夺条件
      3. 请求且保持条件
      4. 环路等待条件

** 银行家算法，死锁定理
**** 死锁定理
     当且仅当系统资源分配图是不可完全简化时，系统中有死锁。
     - 特别的，可以完全简化的时候，系统成功结束，没有简化出来的进程就是参与死锁的进程
**** 银行家算法
***** 安全状态
      安全状态是指分配的资源，满足每个进程的资源的最大需求，则每个进程顺利完成。
***** 简单理解
      简单理解为：进程执行前，判断系统是否有足够的进程分配给该进程使得该进程能够成功执行完毕
** 习题
   
* TODO 3．存储器管理
** TODO 连续分配，动态分配算法，回收算法
*** 连续存储管理
      依次分配内存即可
*** TODO 动态分配算法
**** 首次适应算法
**** 最佳适应算法
**** 最差适应算法
*** 回收算法
    回收的时候对指针，内存的相应处理

** 地址重定位的概念，紧凑
   由逻辑地址->物理地址
** 页式，段式，段页式管理方式，数据结构，地址变换过程
** 可重入码的概念
** 虚存的概念，虚存的实现方式
** 各种页面置换算法及实现方式（FIFO，LRU，CLOCK）
** 工作集的概念
** 习题
    
* TODO 4．文件系统
** 文件的概念
** 文件的逻辑结构，物理结构，存取方法
** 文件控制块，索引节点，树型目录结构
** 建立目录的过程，目录查询技术
** 文件共享与保护措施
** 文件的打开过程，打开的作用，读写过程
** 外存分配方式（连续式，链接式，索引式）
** 文件存储空间管理（表，链，位示图，成组链接）
** 改善文件系统性能的方法
   硬盘
** 文件系统应该具备的主要功能
** Linux中文件系统的实现

* TODO 5．设备管理
** I/O控制方式（程序，中断，直接存储器存取，通道）
** 输入输出硬件组织
** 输入输出软件组织及各层次的处理过程
** 缓冲区的管理方式
** 设备分配流程
** SPOOLing技术
** 设备独立性及实现
** 磁盘存储器管理
*** 磁盘调度算法

* TODO 6．安全与保护
** 口令的身份认证
    口令保护容易理解，也容易实现。
    - 口令的选择策略，内部存储，有效期和限制登录尝试次数等方面加强口令机制的安全
** 访问控制技术
*** 访问控制矩阵（访问表）
*** 访问权限表
*** 保护域
** TODO 没有绝对安全的系统
* Task
** TODO 试卷的完成
** TODO 页面置换算法
** TODO 磁盘调度算法
